/*=========================================================================
  Program:   OpenIGTLink4J Library
  Language:  java
  
  Copyright (c) Fraunhofer IPA. All rights reserved.
  
  This software is distributed WITHOUT ANY WARRANTY; without even
  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the above copyright notices for more information.
=========================================================================*/ 
 
package msg.tdata;

import msg.track.TrackingInstrumentType;
import msg.track.tdata.TransformTrackingData;
import msg.transform.Transform;
import util.MessageTestHelper;

public class TrackingDataMessageTestData {

	static byte[] test_message_header = MessageTestHelper.convertCharToByte(new char[]{
		  /*------- OpenIGTLink message header --------*/
		  0x00, 0x01,                                     /* Version number */
		  0x54, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00,                         /* TDATA */
		  0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
		  0x6d, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00,                         /* Device name */
		  0x00, 0x00, 0x00, 0x00, 0x49, 0x96, 0x02, 0xd4, /* Time stamp */
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd2, /* Body size */
		  0x5c, 0x7c, 0xeb, 0xfd, 0x27, 0x67, 0x68, 0x77, /* CRC */
    });
    
	static byte[] test_message_body_data_0 = MessageTestHelper.convertCharToByte(new char[]{
		  /*---------- TDATA message body ------------*/
		  /* Tracker data 0 */
		  0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x30,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00,                         /* Name */
		  0x02,                                           /* Instrument type */
		  0x00,
		  0xBF, 0x74, 0x73, 0xCD, 0x3E, 0x49, 0x59, 0xE6, /* tx, ty */
		  0xBE, 0x63, 0xDD, 0x98, 0xBE, 0x49, 0x59, 0xE6, /* tz, sx */
		  0x3E, 0x12, 0x49, 0x1B, 0x3F, 0x78, 0x52, 0xD6, /* sy, sz */
		  0x3E, 0x63, 0xDD, 0x98, 0x3F, 0x78, 0x52, 0xD6, /* nx, ny */
		  0xBD, 0xC8, 0x30, 0xAE, 0x42, 0x38, 0x36, 0x60, /* nz, px */
		  0x41, 0x9B, 0xC4, 0x67, 0x42, 0x38, 0x36, 0x60, /* py, pz */
    });
    
	static byte[] test_message_body_data_1 = MessageTestHelper.convertCharToByte(new char[]{
		  /* Tracker data 1 */
		  0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x31,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00,                         /* Name */
		  0x02,                                           /* Instrument type */
		  0x00,
		  0xBF, 0x74, 0x73, 0xCD, 0x3E, 0x49, 0x59, 0xE6, /* tx, ty */
		  0xBE, 0x63, 0xDD, 0x98, 0xBE, 0x49, 0x59, 0xE6, /* tz, sx */
		  0x3E, 0x12, 0x49, 0x1B, 0x3F, 0x78, 0x52, 0xD6, /* sy, sz */
		  0x3E, 0x63, 0xDD, 0x98, 0x3F, 0x78, 0x52, 0xD6, /* nx, ny */
		  0xBD, 0xC8, 0x30, 0xAE, 0x42, 0x38, 0x36, 0x60, /* nz, px */
		  0x41, 0x9B, 0xC4, 0x67, 0x42, 0x38, 0x36, 0x60, /* py, pz */
    });
    
	static byte[] test_message_body_data_2 = MessageTestHelper.convertCharToByte(new char[]{
		  /* Tracker data 2 */
		  0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x32,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00,                         /* Name */
		  0x02,                                           /* Instrument type */
		  0x00,
		  0xBF, 0x74, 0x73, 0xCD, 0x3E, 0x49, 0x59, 0xE6, /* tx, ty */
		  0xBE, 0x63, 0xDD, 0x98, 0xBE, 0x49, 0x59, 0xE6, /* tz, sx */
		  0x3E, 0x12, 0x49, 0x1B, 0x3F, 0x78, 0x52, 0xD6, /* sy, sz */
		  0x3E, 0x63, 0xDD, 0x98, 0x3F, 0x78, 0x52, 0xD6, /* nx, ny */
		  0xBD, 0xC8, 0x30, 0xAE, 0x42, 0x38, 0x36, 0x60, /* nz, px */
		  0x41, 0x9B, 0xC4, 0x67, 0x42, 0x38, 0x36, 0x60, /* py, pz */
    });

    static byte[] test_message_body = MessageTestHelper.join(MessageTestHelper.join(test_message_body_data_0,
    		test_message_body_data_1), test_message_body_data_2);
    static byte[] test_message = MessageTestHelper.join(test_message_header, test_message_body);

    static long VERSION = 1L;

   static long timestamp = 1234567892;
   static String deviceName = "DeviceName";

	static float[] inT = new float[]{-0.954892f, 0.196632f, -0.222525f};
	static float[] inS = new float[]{-0.196632f, 0.142857f, 0.970014f};
	static float[] inN = new float[]{0.222525f, 0.970014f, -0.0977491f};
	static float[] inOrigin = new float[]{46.0531f,19.4709f,46.0531f};
	static float[][] rotationMatrix = {{inT[0],inS[0],inN[0]},
	                            {inT[1],inS[1],inN[1]},
	                            {inT[2],inS[2],inN[2]}};
	
	static TransformTrackingData testElement0 = new TransformTrackingData("Tracker0", 
			TrackingInstrumentType.INSTRUMENT_6D, new Transform(inOrigin, rotationMatrix));
	static TransformTrackingData testElement1 = new TransformTrackingData("Tracker1", 
			TrackingInstrumentType.INSTRUMENT_6D, new Transform(inOrigin, rotationMatrix));
	static TransformTrackingData testElement2 = new TransformTrackingData("Tracker2", 
			TrackingInstrumentType.INSTRUMENT_6D, new Transform(inOrigin, rotationMatrix));

}
