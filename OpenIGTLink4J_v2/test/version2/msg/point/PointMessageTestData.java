/*=========================================================================
  Program:   OpenIGTLink4J Library
  Language:  java
  
  Copyright (c) Fraunhofer IPA. All rights reserved.
  
  This software is distributed WITHOUT ANY WARRANTY; without even
  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the above copyright notices for more information.
=========================================================================*/ 
 
package msg.point;

import msg.point.PointElement;
import util.MessageTestHelper;

public class PointMessageTestData {

	static byte[] test_message_header = MessageTestHelper.convertCharToByte(new char[]{
			  /*------- OpenIGTLink message header --------*/
			  0x00, 0x01,                                     /* Version number */
			  0x50, 0x4f, 0x49, 0x4e, 0x54, 0x00, 0x00, 0x00,
			  0x00, 0x00, 0x00, 0x00,                         /* POINT */
			  0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
			  0x6d, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			  0x00, 0x00, 0x00, 0x00,                         /* Device name */
			  0x00, 0x00, 0x00, 0x00, 0x49, 0x96, 0x02, 0xd2, /* Time stamp */
			  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, /* Body size */
			  0xa5, 0x5c, 0xc6, 0x2d, 0x99, 0xc1, 0x82, 0x10  /* CRC */
    });

	/*---------- POINT message body ------------*/
    
    static byte[] test_point_data_0 = MessageTestHelper.convertCharToByte(new char[]{
		/* Image meta data 0 */
		  0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x45,
		  0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
		  0x4e, 0x5f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Image description */

		  0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Group name (Landmark etc.) */

		  0xff, 0x00, 0x00, 0xff,                         /* RGBA */

		  0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
		  0x41, 0xa0, 0x00, 0x00,                         /* Position */

		  0x40, 0xa0, 0x00, 0x00,                         /* Radius */

		  0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x30, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00                         /* Owner image */
    });
    static byte[] test_point_data_1 = MessageTestHelper.convertCharToByte(new char[]{
		/* Image meta data 1 */
		  0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x45,
		  0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
		  0x4e, 0x5f, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Image description */

		  0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Group name (Landmark etc.) */

		  0x00, 0xff, 0x00, 0xff,                         /* RGBA */

		  0x41, 0xc8, 0x00, 0x00, 0x41, 0xf0, 0x00, 0x00,
		  0x42, 0x0c, 0x00, 0x00,                         /* Position */

		  0x40, 0x40, 0x00, 0x00,                         /* Radius */

		  0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x30, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00                          /* Owner image */
    });
    static byte[] test_point_data_2 = MessageTestHelper.convertCharToByte(new char[]{
		/* Image meta data 2 */
		  0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x45,
		  0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
		  0x4e, 0x5f, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Image description */

		  0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* Group name (Landmark etc.) */

		  0x00, 0x00, 0xff, 0xff,                         /* RGBA */

		  0x42, 0x20, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00,
		  0x42, 0x48, 0x00, 0x00,                         /* Position */

		  0x3f, 0x80, 0x00, 0x00,                         /* Radius */

		  0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x30, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00                          /* Owner image */
    });
    
    static byte[] test_message_body = MessageTestHelper.join(test_point_data_0, 
    		MessageTestHelper.join(test_point_data_1, test_point_data_2));
 
    static byte[] test_message = MessageTestHelper.join(test_message_header, 
    		test_message_body);

    static long VERSION = 1L;
    
    static long timestamp = 1234567890;
    static String deviceName = "DeviceName";

    static PointElement testElement0 = new PointElement(
    		"POINT_DESCRIPTION_0",
    		"Landmark",
    		new byte[]{(byte)255,(byte)0,(byte)0,(byte)255},
    		new float[]{10, 15, 20},
    		5,
    		"IMAGE_0");
    
    static PointElement testElement1 = new PointElement(
    		"POINT_DESCRIPTION_1",
    		"Landmark",
    		new byte[]{(byte)0,(byte)255,(byte)0,(byte)255},
    		new float[]{25, 30, 35},
    		3,
    		"IMAGE_0");
    
    static PointElement testElement2 = new PointElement(
    		"POINT_DESCRIPTION_2",
    		"Landmark",
    		new byte[]{(byte)0,(byte)0,(byte)255,(byte)255},
    		new float[]{40, 45, 50},
    		1,
    		"IMAGE_0");
    
   	static PointElement[] testElement = new PointElement[]{
   			testElement0, testElement1, testElement2
   	};

}
